using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

namespace HisenseGD_BX.SMGL
{
    public partial class FrmComSet : Form
    {
        /// <summary>
        /// 配置文件路径
        /// </summary>
        string strFilePath = Application.StartupPath + "\\Config.txt";
        StringBuilder temp = new StringBuilder(16);

        [DllImport("Kernel32.dll")]
        private static extern long WritePrivateProfileString(string section, string key, string val, string filePath);
        [DllImport("Kernel32.dll")]
        private static extern int GetPrivateProfileString(string section, string key, string def, StringBuilder retval, int size, string filePath);

        public FrmComSet()
        {
            InitializeComponent();
        }

        private void FrmComSet_Load(object sender, EventArgs e)
        {
            try
            {
                Cursor.Current = Cursors.WaitCursor;
                string strScanner = ""; string strPLC = "";
                if (!File.Exists(strFilePath))
                {
                    WritePrivateProfileString("PLC", "PLC", "COM2,9600,无,8,1", strFilePath);
                    WritePrivateProfileString("Scanner", "Scanner", "COM3,9600,无,8,1", strFilePath);
                    strPLC = "COM1,9600,无,8,1";
                    strScanner = "COM2,9600,无,8,1";
                }
                else
                {
                    GetPrivateProfileString("PLC", "PLC", "读取配置文件错误", temp, 255, strFilePath);
                    strPLC = temp.ToString();
                    temp.Remove(0, temp.Length);

                    GetPrivateProfileString("Scanner", "Scanner", "读取配置文件错误", temp, 255, strFilePath);
                    strScanner = temp.ToString();
                    temp.Remove(0, temp.Length);
                }
                SetComValue("PLC", strPLC);
                SetComValue("Scanner", strScanner);

            }
            catch (Exception ex)
            {
                Cursor.Current = Cursors.Default;
                MessageBox.Show(ex.Message, "错误");
            }
        }

        private void SetComValue(string strMark, string strResult)
        {
            string[] cell = strResult.Split(',');
            switch (strMark)
            {

                case "PLC":
                    comboBoxComPLC.Text = cell[0];
                    comboBoxBaudPLC.Text = cell[1];
                    comboBoxJYPLC.Text = cell[2];
                    comboBoxDataPLC.Text = cell[3];
                    comboBoxStopPLC.Text = cell[4];
                    break;

                //case "Scanner":
                //    cboScanPort.Text = cell[0];
                //    cboScanBaud.Text = cell[1];
                //    cboScanParity.Text = cell[2];
                //    cboScanDbt.Text = cell[3];
                //    cboScanstopbit.Text = cell[4];
                //    break;
            }
        }
        private void tsbtnAdd_Click(object sender, EventArgs e)
        {

            WritePrivateProfileString("PLC", "PLC", comboBoxComPLC.Text + "," + comboBoxBaudPLC.Text + "," + comboBoxJYPLC.Text + "," + comboBoxDataPLC.Text + "," + comboBoxStopPLC.Text, strFilePath);

            //WritePrivateProfileString("Scanner", "Scanner", cboScanPort.Text + "," + cboScanBaud.Text + "," + cboScanParity.Text + "," + cboScanDbt.Text + "," + cboScanstopbit.Text, strFilePath);

            MessageBox.Show("端口设置完成", "提示");
            DialogResult = DialogResult.OK;
        }

        private void tlBtnExit_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void tlBtnEdit_Click(object sender, EventArgs e)
        {
            this.Close();
        }
    }
}
